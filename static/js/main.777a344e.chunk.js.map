{"version":3,"sources":["img/persik.png","utils/sendCLick.js","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","btnSendClick","e","fn","event","detail","type","data","console","log","code_data","error_type","error_data","bridge","subscribe","send","setTimeout","unsubscribe","Home","id","fetchedUser","go","useState","count","setCount","name","setName","surname","setSurname","setTeam","title","before","photo_200","src","description","city","first_name","last_name","className","top","defaultValue","placeholder","onChange","target","value","currentTarget","parseInt","size","disabled","onClick","osName","platform","Persik","props","left","data-to","IOS","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","user","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.777a344e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import bridge from '@vkontakte/vk-bridge';\r\n\r\nexport const btnSendClick = (e) => {\r\n    const fn = event => {\r\n        if (!event.detail) {\r\n            return;\r\n        }\r\n\r\n        const { type, data } = event.detail;\r\n\r\n        if (type === 'VKWebAppOpenCodeReaderResult') {\r\n            // Reading result of the Code Reader\r\n            console.log(data.code_data);\r\n        }\r\n\r\n        if (type === 'VKWebAppOpenCodeReaderFailed') {\r\n            // Catching the error\r\n            console.log(data.error_type, data.error_data);\r\n        }\r\n    };\r\n\r\n    bridge.subscribe(fn);\r\n\r\n    // Sending method\r\n    bridge.send('VKWebAppOpenCodeReader', {});\r\n\r\n    setTimeout(bridge.unsubscribe(fn), 2000);\r\n    //alert(JSON.stringify({name: name, surname: surname, team: team, count: count}));\r\n};\r\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {FormLayout, FormLayoutGroup, Input, Snackbar, Icon24Favorite} from '@vkontakte/vkui/';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\nimport {btnSendClick} from './../utils/sendCLick'\n\nconst orangeBackground = {\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\n};\n\nconst Home = ({ id, go, fetchedUser }) => {\n\n    const [count, setCount] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [team, setTeam] = useState(\"\");\n    const [snackbar, setSnackbar] = useState(null);\n\n    const onChange = (e) => {\n        let { value } = e.currentTarget;\n        if (((value <= 300 && value >= 0) || value === '')) setCount( (value === '') ? value : parseInt(value) );\n    };\n\n    return (<Panel id={id}>\n            <PanelHeader>Введите свой результат</PanelHeader>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Bridge\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <FormLayout className=\"bowl-Form\">\n                        <FormLayoutGroup top=\"Фамилия\">\n                            <Input type=\"text\" defaultValue=\"\" placeholder=\"Введите фамилию\" onChange={e => setSurname(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup top=\"Имя\">\n                            <Input type=\"text\" defaultValue=\"\" placeholder=\"Введите имя\" onChange={e => setName(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup top=\"Команда\">\n                            <Input type=\"text\" defaultValue=\"\" placeholder=\"Введите название команды\" onChange={e => setTeam(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup top=\"Кол-во очков\">\n                        \t<Input type=\"number\" placeholder=\"Повторите кол-во очков\" onChange={onChange} value={count}/>\n                        </FormLayoutGroup>\n\t\t\t\t\t\t<Button size=\"xl\"  disabled={(!(count !== \"\" && name !== '' && surname !== ''))} onClick={btnSendClick}>Отправить</Button>\n                    </FormLayout>\n                </Div>\n            </Group>\n        </Panel>\n    );\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n const [activePanel, setActivePanel] = useState('home');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}