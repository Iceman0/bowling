{"version":3,"sources":["img/persik.png","panels/Home.js","utils/sendCLick.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","fetchedUser","go","useState","count","setCount","name","setName","surname","setSurname","team","setTeam","title","before","photo_200","src","description","city","first_name","last_name","className","top","type","defaultValue","placeholder","onChange","e","target","value","currentTarget","parseInt","size","disabled","onClick","doc","GoogleSpreadsheet","row","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","addRow","console","error","appendSpreadsheet","Name","Surname","Team","Points","btnSendClick","osName","platform","Persik","props","left","data-to","IOS","persik","alt","App","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fa462bcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {FormLayout, FormLayoutGroup, Input, Snackbar, Icon24Favorite} from '@vkontakte/vkui/';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\nimport {btnSendClick} from './../utils/sendCLick'\n\nconst orangeBackground = {\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\n};\n\nconst Home = ({ id, go, fetchedUser }) => {\n\n    const [count, setCount] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [team, setTeam] = useState(\"\");\n    const [snackbar, setSnackbar] = useState(null);\n\n    const onChange = (e) => {\n        let { value } = e.currentTarget;\n        if (((value <= 300 && value >= 0) || value === '')) setCount( (value === '') ? value : parseInt(value) );\n    };\n\n    return (<Panel id={id}>\n            <PanelHeader>Введите свой результат</PanelHeader>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Bridge\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <FormLayout className=\"bowl-Form\">\n                        <FormLayoutGroup top=\"Фамилия\">\n                            <Input type=\"text\" defaultValue=\"\" placeholder=\"Введите фамилию\" onChange={e => setSurname(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup top=\"Имя\">\n                            <Input type=\"text\" defaultValue=\"\" placeholder=\"Введите имя\" onChange={e => setName(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup top=\"Команда\">\n                            <Input type=\"text\" defaultValue=\"\" placeholder=\"Введите название команды\" onChange={e => setTeam(e.target.value)}/>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup top=\"Кол-во очков\">\n                        \t<Input type=\"number\" placeholder=\"Повторите кол-во очков\" onChange={onChange} value={count}/>\n                        </FormLayoutGroup>\n\t\t\t\t\t\t<Button size=\"xl\"  disabled={(!(count !== \"\" && name !== '' && surname !== ''))} onClick={() => btnSendClick(name, surname, team, count)}>Отправить</Button>\n                    </FormLayout>\n                </Div>\n            </Group>\n        </Panel>\n    );\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import bridge from '@vkontakte/vk-bridge';\r\n//import * from jQuery;\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\nexport const btnSendClick = (name, surname, team, count) => {\r\n\r\n// Config variables\r\n    const SPREADSHEET_ID = '1ueVeSFIImgOy0z4JVkNCU3Z8mTdTsswfSK8ar9Jk6pQ';\r\n    const SHEET_ID = '0';\r\n    const CLIENT_EMAIL = 'bowling@bowlingsheets-1600545716945.iam.gserviceaccount.com';\r\n    const PRIVATE_KEY = \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCgsuMIRdYFU0I+\\nJhLY6Spcrzp+8cAbIHqQSslf0Km0igISQohSIAZn1RyGGc8GoKSoEudb9kfAL2BD\\nYgggqJnwNJLQzsQLeL/eePpRrakYlKuhscJQV4ouo/oOM4tRdzQl+113hdYrmKbV\\nmXGoqFLAZR5cw7Ak3L4rdairFsgmnAc1OOV7Un2ImaGCeKU/PLVA9/V38g5wTPCH\\nmArmOXUHLcZzj2aZInpgy1i2nct9IhNCP5fiqan5a0FMtn5aVAvw/1zd3L+KAhN3\\nhZ+FO4oVoxqKwHqkJ/FZia8wwHDxu1X5B9r0nQLN/QjjKQrEwJqoCO7qtShjF9Dw\\n6cBHQR0JAgMBAAECggEAEChcboEDF277Kp+OZpPvJ/mQcqIhFDksSaTTYZhr79Su\\nh6J77XH94uPJJeyjZcGyPJoF/DejmD3LOos5UPtS2xWWK3uWt6aQ+DAGzz6cUXXl\\nWfEzHfvnT3A6XMIvAGZxbl47VCC3W5PSNojipjgidejU6DPe2p39WwZOCsHUJxmB\\nLSCow6wmycEwXq2qMlg522TZWklMgsk9xPVJ+Y7B2VAHGiQB+EMJ25aYGzWigZ3O\\nQVmShzsxJr5dPioFuljvpJpgOhAYP5qVhjZCnha2580z6qWdeaSeOMtWHlzNzwwe\\nP4vDa4MGudQ0xG7bW3bmx2n4sYoMYRK5WX7HIH0L9wKBgQDcMdkdoUgOa6MZCtv6\\nP66btgVhEnQCdzpWPN/wUvquF0NvG7P7yBDBr72xNeevq38y8A021lRwY+s1NdTS\\n7Eo0yM0hSx/97+x+sQOabFVWX7gyrzvpWLRI8OJzkEiTQbGDMe8qLxFk432SBio2\\nfKoeCOsstbz1MOwEuyFQzru6AwKBgQC61F9WjZt2IRADfWstpj4er4k1sfFSWIk1\\naTHIm7mQrk2WBUcfq8D3vV7crRtwj0nMhWhJqxVmQ3zmox5bZ5BHuPMM4NUGdIrm\\n+EhfpG80pHNRYQsAjNoDOS06lu8C5FoxHih79tkD/8pI+fP6mCWg9AMzYCk2R6Gr\\nrzPjkA6lAwKBgCpcbKiGnpYnnvjyXd+G4NCT8/T419ihl1d/3pUdYZycXRzC9504\\noACjDptJA4mINLBX/jLOiPAWSOmzsX3id2QwPUZqbX0s6xJ0e3z52nEDeSxHCf+a\\nURS3Qtl4qH2r5bqXoKs84tvF6CJvjS9uTEv660Nusyt4fe9rEL27B+KBAoGBAIS7\\n11Ql3TpK+RaRp3DSODYS3jewyVOIpUq2BvGQeYDp5SNdco90te8MsnWz4tfQZU0R\\nxur3yodSEU3GvA2SgXYDV2Jh5dblO74mzTxuFbff0jIR8QAeEdHScGi8zOhQFifp\\nVjfkQ4BM3YmFU6pJKAq28gMxIXZ348uW+RWGxnDDAoGBAISnJBFMZZirS4JXvf/z\\nIqviIPUllV+7igFd9ZHLYCyIrfeJW4B24Zf05T9FFX9ZOwUXl4vwyIG2ZyUXbsUt\\nxmj9KojIxLhkmLtR543pWeqlmhybuDfbEZNNdahnR/tuzAIMiQ5gv9REiEFehIRC\\niXZ1RyLCWlBH3E01jdNbkQ+L\\n-----END PRIVATE KEY-----\\n\";\r\n\r\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n\r\n    const appendSpreadsheet = async (row) => {\r\n        try {\r\n            await doc.useServiceAccountAuth({\r\n                client_email: CLIENT_EMAIL,\r\n                private_key: PRIVATE_KEY,\r\n            });\r\n            // loads document properties and worksheets\r\n            await doc.loadInfo();\r\n\r\n            const sheet = doc.sheetsById[SHEET_ID];\r\n            const result = await sheet.addRow(row);\r\n        } catch (e) {\r\n            console.error('Error: ', e);\r\n        }\r\n    };\r\n\r\n    const newRow = { Name: name, Surname: surname, Team: team, Points: count };\r\n\r\n    appendSpreadsheet(newRow);\r\n    //alert(JSON.stringify({name: name, surname: surname, team: team, count: count}));\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n const [activePanel, setActivePanel] = useState('home');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}